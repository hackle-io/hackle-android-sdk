name: Publish

on:
  release:
    types:
      - prereleased
  workflow_dispatch:

jobs:
  publish:
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v2

      - name: Set up JDK 8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8

      - name: Set up Gradle
        uses: gradle/gradle-build-action@v2
        with:
          gradle-version: 7.2

      - name: Set up Snapshot version for Workflow Dispatch
        if: ${{ github.event_name == 'workflow_dispatch'}}
        run: |
          CURRENT_VERSION=$(grep 'sdk_version=' gradle.properties | sed -E 's/sdk_version=([0-9]+\.[0-9]+\.[0-9]+).*/\1/')
          SHORT_SHA=$(git rev-parse --short HEAD)
          SNAPSHOT_VERSION="$CURRENT_VERSION-$SHORT_SHA-SNAPSHOT"
          sed -i "s/sdk_version=.*/sdk_version=$SNAPSHOT_VERSION/" gradle.properties

      - name: Verify sdk_version matches release name
        if: ${{ github.event_name == 'release' }}
        run: |
          SDK_VERSION=$(grep 'sdk_version=' gradle.properties | sed -E 's/sdk_version=([0-9]+\.[0-9]+\.[0-9]+).*/\1/')
          RELEASE_NAME="${{ github.event.release.name }}"
          echo "sdk_version: $SDK_VERSION, release.name: $RELEASE_NAME"
          if [ "$SDK_VERSION" != "$RELEASE_NAME" ]; then
            echo "Error: sdk_version ($SDK_VERSION) does not match release.name ($RELEASE_NAME)"
            echo "Ensure that the release name in GitHub matches the sdk_version in gradle.properties."
            exit 1
          else
            echo "sdk_version matches release.name"
          fi

      - name: Set up secrets
        env:
          SDKKEY: ${{secrets.SDKKEY}}
          EVENTURI: ${{secrets.EVENTURI}}
          SDKURI: ${{secrets.SDKURI}}
          MONITORINGURI: ${{secrets.MONITORINGURI}}
        run: |
            echo "sdkKey=\"$SDKKEY\"" >> ./local.properties
            echo "eventUri=\"$EVENTURI\"" >> ./local.properties
            echo "sdkUri=\"$SDKURI\"" >> ./local.properties
            echo "monitoringUri=\"$MONITORINGURI\"" >> ./local.properties

      - name: Publish
        run: gradle :hackle-android-sdk:clean :hackle-android-sdk:build :hackle-android-sdk:publishToSonatype --info
        env:
          SONATYPE_USERNAME: ${{ secrets.SONATYPE_USERNAME }}
          SONATYPE_PASSWORD: ${{ secrets.SONATYPE_PASSWORD }}
          SIGNING_KEY: ${{ secrets.SIGNING_KEY }}
          SIGNING_PASSWORD: ${{ secrets.SIGNING_PASSWORD }}
